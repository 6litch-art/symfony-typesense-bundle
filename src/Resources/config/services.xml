<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services
        https://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>
        <defaults public="true"/>


        <!-- @todo: Structure for multiserver configuration.. There will be multiple clients..  -->
        <service id="typesense_manager" alias="Typesense\Bundle\ORM\TypesenseManager" />
        <service id="Typesense\Bundle\ORM\TypesenseManagerInterface" alias="typesense_manager"/>
        <service id="Typesense\Bundle\ORM\TypesenseManager" public="true">
            <argument/>
        </service>
       
        <!-- Abstract definition for client. -->
        <service id="typesense.connection" class="Typesense\Bundle\DBAL\Connection" public="true" abstract="true">
             <argument/> <!-- connection name -->
             <argument type="service" id="parameter_bag"/>
        </service>

        <service id="typesense.metadata" class="Typesense\Bundle\ORM\Mapping\TypesenseMetadata" public="true"
                 abstract="true">
            <argument/>
            <argument/>
            <argument type="service" id="typesense.transformer.entity"/>
        </service>

        <service id="typesense.collection" class="Typesense\Bundle\ORM\Mapping\TypesenseCollection" public="true" abstract="true">
            <argument/> <!-- metadata -->
            <argument/> <!-- collection -->
        </service>

        <service id="typesense.finder" class="Typesense\Bundle\ORM\TypesenseFinder" abstract="true">
            <argument/> <!-- collection -->
            <argument type="service" id="parameter_bag"/>
        </service>

        <!-- doctrine -->
        <service id="typesense.listener.doctrine_indexer" class="Typesense\Bundle\EventListener\TypesenseIndexer">
            <tag name="doctrine.event_listener" event="postPersist" priority="-1" connection="default"/>
            <tag name="doctrine.event_listener" event="postUpdate"  priority="-1" connection="default"/>
            <tag name="doctrine.event_listener" event="preRemove"   priority="-1" connection="default"/>
            <tag name="doctrine.event_listener" event="postRemove"  priority="-1" connection="default"/>
            <tag name="doctrine.event_listener" event="postFlush"   priority="-1" connection="default"/>

            <argument type="service" id="typesense_manager"/>
            <argument type="service" id="request_stack"/>
            <argument type="service" id="parameter_bag"/>
        </service>

        <!-- commands -->
        <service id="typesense.command.create" class="Typesense\Bundle\Command\CreateCommand" public="true">
            <tag name="console.command"/>
            <argument type="service" id="typesense_manager"/>
        </service>
        <service id="typesense.command.list" class="Typesense\Bundle\Command\ListCommand" public="true">
            <tag name="console.command"/>
             <argument type="service" id="typesense_manager"/>
        </service>
        <service id="typesense.command.health" class="Typesense\Bundle\Command\HealthCommand" public="true">
            <tag name="console.command"/>
             <argument type="service" id="typesense_manager"/>
        </service>
        <service id="typesense.command.action" class="Typesense\Bundle\Command\ActionCommand" public="true">
            <tag name="console.command"/>
             <argument type="service" id="typesense_manager"/>
        </service>
        <service id="typesense.command.populate" class="Typesense\Bundle\Command\PopulateCommand" public="true">
            <tag name="console.command"/>
             <argument type="service" id="typesense_manager"/>
        </service>

        <!-- transformers -->
        <service id="Typesense\Bundle\ORM\Transformer\Abstract\TransformerInterface" alias="typesense.transformer"/>
        <service id="typesense.transformer" class="Typesense\Bundle\ORM\Transformer\Abstract\AbstractTransformer" public="true" abstract="true" />
        <service id="typesense.transformer.entity" class="Typesense\Bundle\ORM\Transformer\EntityTransformer" public="true" parent="typesense.transformer">
             <argument type="service" id="doctrine.orm.entity_manager"/>
        </service>

    </services>
</container>
